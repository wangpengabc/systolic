;chisel3.BuildInfo$@527a8665
circuit ParameterizedAggregateOneHotTester : 
  module ParameterizedAggregateOneHot : 
    input clock : Clock
    input reset : Reset
    output io : {flip selectors : UInt<1>[4], out : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 143:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 143:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 143:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 143:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 144:12]
    wire _io_out_WIRE : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:72]
    wire _io_out_WIRE_1 : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:72]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:72]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:72]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:72]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:72]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:72]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:72]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:72]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:72]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:72]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:72]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:72]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:72]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:72]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:72]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:72]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:72]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:72]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:72]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:72]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:72]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:72]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:72]
    _io_out_WIRE.a.f2 <= _io_out_WIRE_1.f2 @[Mux.scala 27:72]
    _io_out_WIRE.a.f1 <= _io_out_WIRE_1.f1 @[Mux.scala 27:72]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:72]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:72]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:72]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:72]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:72]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:72]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:72]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:72]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:72]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:72]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:72]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:72]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:72]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:72]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:72]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:72]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:72]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:72]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:72]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:72]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:72]
    _io_out_WIRE.v[0] <= _io_out_WIRE_4[0] @[Mux.scala 27:72]
    _io_out_WIRE.v[1] <= _io_out_WIRE_4[1] @[Mux.scala 27:72]
    io.out.a.f2 <= _io_out_WIRE.a.f2 @[OneHotMuxSpec.scala 205:10]
    io.out.a.f1 <= _io_out_WIRE.a.f1 @[OneHotMuxSpec.scala 205:10]
    io.out.v[0] <= _io_out_WIRE.v[0] @[OneHotMuxSpec.scala 205:10]
    io.out.v[1] <= _io_out_WIRE.v[1] @[OneHotMuxSpec.scala 205:10]
    
  module ParameterizedAggregateOneHot_1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip selectors : UInt<1>[4], out : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 143:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 143:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 143:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 143:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 144:12]
    wire _io_out_WIRE : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:72]
    wire _io_out_WIRE_1 : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:72]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:72]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:72]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:72]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:72]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:72]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:72]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:72]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:72]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:72]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:72]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:72]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:72]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:72]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:72]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:72]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:72]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:72]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:72]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:72]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:72]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:72]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:72]
    _io_out_WIRE.a.f2 <= _io_out_WIRE_1.f2 @[Mux.scala 27:72]
    _io_out_WIRE.a.f1 <= _io_out_WIRE_1.f1 @[Mux.scala 27:72]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:72]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:72]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:72]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:72]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:72]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:72]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:72]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:72]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:72]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:72]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:72]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:72]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:72]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:72]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:72]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:72]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:72]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:72]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:72]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:72]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:72]
    _io_out_WIRE.v[0] <= _io_out_WIRE_4[0] @[Mux.scala 27:72]
    _io_out_WIRE.v[1] <= _io_out_WIRE_4[1] @[Mux.scala 27:72]
    io.out.a.f2 <= _io_out_WIRE.a.f2 @[OneHotMuxSpec.scala 205:10]
    io.out.a.f1 <= _io_out_WIRE.a.f1 @[OneHotMuxSpec.scala 205:10]
    io.out.v[0] <= _io_out_WIRE.v[0] @[OneHotMuxSpec.scala 205:10]
    io.out.v[1] <= _io_out_WIRE.v[1] @[OneHotMuxSpec.scala 205:10]
    
  module ParameterizedAggregateOneHot_2 : 
    input clock : Clock
    input reset : Reset
    output io : {flip selectors : UInt<1>[4], out : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 143:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 143:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 143:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 143:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 144:12]
    wire _io_out_WIRE : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:72]
    wire _io_out_WIRE_1 : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:72]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:72]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:72]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:72]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:72]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:72]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:72]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:72]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:72]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:72]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:72]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:72]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:72]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:72]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:72]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:72]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:72]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:72]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:72]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:72]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:72]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:72]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:72]
    _io_out_WIRE.a.f2 <= _io_out_WIRE_1.f2 @[Mux.scala 27:72]
    _io_out_WIRE.a.f1 <= _io_out_WIRE_1.f1 @[Mux.scala 27:72]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:72]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:72]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:72]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:72]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:72]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:72]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:72]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:72]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:72]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:72]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:72]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:72]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:72]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:72]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:72]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:72]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:72]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:72]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:72]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:72]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:72]
    _io_out_WIRE.v[0] <= _io_out_WIRE_4[0] @[Mux.scala 27:72]
    _io_out_WIRE.v[1] <= _io_out_WIRE_4[1] @[Mux.scala 27:72]
    io.out.a.f2 <= _io_out_WIRE.a.f2 @[OneHotMuxSpec.scala 205:10]
    io.out.a.f1 <= _io_out_WIRE.a.f1 @[OneHotMuxSpec.scala 205:10]
    io.out.v[0] <= _io_out_WIRE.v[0] @[OneHotMuxSpec.scala 205:10]
    io.out.v[1] <= _io_out_WIRE.v[1] @[OneHotMuxSpec.scala 205:10]
    
  module ParameterizedAggregateOneHot_3 : 
    input clock : Clock
    input reset : Reset
    output io : {flip selectors : UInt<1>[4], out : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}}}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 143:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 143:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 143:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 143:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 144:12]
    wire _io_out_WIRE : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[Mux.scala 27:72]
    wire _io_out_WIRE_1 : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>} @[Mux.scala 27:72]
    node _io_out_T = asUInt(values_0.a.f2) @[Mux.scala 27:72]
    node _io_out_T_1 = mux(io.selectors[0], _io_out_T, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_2 = asUInt(values_1.a.f2) @[Mux.scala 27:72]
    node _io_out_T_3 = mux(io.selectors[1], _io_out_T_2, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_4 = asUInt(values_2.a.f2) @[Mux.scala 27:72]
    node _io_out_T_5 = mux(io.selectors[2], _io_out_T_4, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_6 = asUInt(values_3.a.f2) @[Mux.scala 27:72]
    node _io_out_T_7 = mux(io.selectors[3], _io_out_T_6, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_8 = or(_io_out_T_1, _io_out_T_3) @[Mux.scala 27:72]
    node _io_out_T_9 = or(_io_out_T_8, _io_out_T_5) @[Mux.scala 27:72]
    node _io_out_T_10 = or(_io_out_T_9, _io_out_T_7) @[Mux.scala 27:72]
    wire _io_out_WIRE_2 : Fixed<9><<5>> @[Mux.scala 27:72]
    node _io_out_T_11 = asFixedPoint(_io_out_T_10, 5) @[Mux.scala 27:72]
    _io_out_WIRE_2 <= _io_out_T_11 @[Mux.scala 27:72]
    _io_out_WIRE_1.f2 <= _io_out_WIRE_2 @[Mux.scala 27:72]
    node _io_out_T_12 = asUInt(values_0.a.f1) @[Mux.scala 27:72]
    node _io_out_T_13 = mux(io.selectors[0], _io_out_T_12, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_14 = asUInt(values_1.a.f1) @[Mux.scala 27:72]
    node _io_out_T_15 = mux(io.selectors[1], _io_out_T_14, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_16 = asUInt(values_2.a.f1) @[Mux.scala 27:72]
    node _io_out_T_17 = mux(io.selectors[2], _io_out_T_16, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_18 = asUInt(values_3.a.f1) @[Mux.scala 27:72]
    node _io_out_T_19 = mux(io.selectors[3], _io_out_T_18, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_20 = or(_io_out_T_13, _io_out_T_15) @[Mux.scala 27:72]
    node _io_out_T_21 = or(_io_out_T_20, _io_out_T_17) @[Mux.scala 27:72]
    node _io_out_T_22 = or(_io_out_T_21, _io_out_T_19) @[Mux.scala 27:72]
    wire _io_out_WIRE_3 : Fixed<7><<3>> @[Mux.scala 27:72]
    node _io_out_T_23 = asFixedPoint(_io_out_T_22, 3) @[Mux.scala 27:72]
    _io_out_WIRE_3 <= _io_out_T_23 @[Mux.scala 27:72]
    _io_out_WIRE_1.f1 <= _io_out_WIRE_3 @[Mux.scala 27:72]
    _io_out_WIRE.a.f2 <= _io_out_WIRE_1.f2 @[Mux.scala 27:72]
    _io_out_WIRE.a.f1 <= _io_out_WIRE_1.f1 @[Mux.scala 27:72]
    wire _io_out_WIRE_4 : Fixed<8><<4>>[2] @[Mux.scala 27:72]
    node _io_out_T_24 = asUInt(values_0.v[0]) @[Mux.scala 27:72]
    node _io_out_T_25 = mux(io.selectors[0], _io_out_T_24, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_26 = asUInt(values_1.v[0]) @[Mux.scala 27:72]
    node _io_out_T_27 = mux(io.selectors[1], _io_out_T_26, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_28 = asUInt(values_2.v[0]) @[Mux.scala 27:72]
    node _io_out_T_29 = mux(io.selectors[2], _io_out_T_28, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_30 = asUInt(values_3.v[0]) @[Mux.scala 27:72]
    node _io_out_T_31 = mux(io.selectors[3], _io_out_T_30, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_32 = or(_io_out_T_25, _io_out_T_27) @[Mux.scala 27:72]
    node _io_out_T_33 = or(_io_out_T_32, _io_out_T_29) @[Mux.scala 27:72]
    node _io_out_T_34 = or(_io_out_T_33, _io_out_T_31) @[Mux.scala 27:72]
    wire _io_out_WIRE_5 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_35 = asFixedPoint(_io_out_T_34, 4) @[Mux.scala 27:72]
    _io_out_WIRE_5 <= _io_out_T_35 @[Mux.scala 27:72]
    _io_out_WIRE_4[0] <= _io_out_WIRE_5 @[Mux.scala 27:72]
    node _io_out_T_36 = asUInt(values_0.v[1]) @[Mux.scala 27:72]
    node _io_out_T_37 = mux(io.selectors[0], _io_out_T_36, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_38 = asUInt(values_1.v[1]) @[Mux.scala 27:72]
    node _io_out_T_39 = mux(io.selectors[1], _io_out_T_38, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_40 = asUInt(values_2.v[1]) @[Mux.scala 27:72]
    node _io_out_T_41 = mux(io.selectors[2], _io_out_T_40, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_42 = asUInt(values_3.v[1]) @[Mux.scala 27:72]
    node _io_out_T_43 = mux(io.selectors[3], _io_out_T_42, UInt<1>("h00")) @[Mux.scala 27:72]
    node _io_out_T_44 = or(_io_out_T_37, _io_out_T_39) @[Mux.scala 27:72]
    node _io_out_T_45 = or(_io_out_T_44, _io_out_T_41) @[Mux.scala 27:72]
    node _io_out_T_46 = or(_io_out_T_45, _io_out_T_43) @[Mux.scala 27:72]
    wire _io_out_WIRE_6 : Fixed<8><<4>> @[Mux.scala 27:72]
    node _io_out_T_47 = asFixedPoint(_io_out_T_46, 4) @[Mux.scala 27:72]
    _io_out_WIRE_6 <= _io_out_T_47 @[Mux.scala 27:72]
    _io_out_WIRE_4[1] <= _io_out_WIRE_6 @[Mux.scala 27:72]
    _io_out_WIRE.v[0] <= _io_out_WIRE_4[0] @[Mux.scala 27:72]
    _io_out_WIRE.v[1] <= _io_out_WIRE_4[1] @[Mux.scala 27:72]
    io.out.a.f2 <= _io_out_WIRE.a.f2 @[OneHotMuxSpec.scala 205:10]
    io.out.a.f1 <= _io_out_WIRE.a.f1 @[OneHotMuxSpec.scala 205:10]
    io.out.v[0] <= _io_out_WIRE.v[0] @[OneHotMuxSpec.scala 205:10]
    io.out.v[1] <= _io_out_WIRE.v[1] @[OneHotMuxSpec.scala 205:10]
    
  module ParameterizedAggregateOneHotTester : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    wire values_0 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_0.v[0] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 141:12]
    values_0.v[1] <= asFixedPoint(UInt<1>("h00"), 4) @[OneHotMuxSpec.scala 142:12]
    values_0.a.f1 <= asFixedPoint(UInt<1>("h00"), 3) @[OneHotMuxSpec.scala 143:12]
    values_0.a.f2 <= asFixedPoint(UInt<1>("h00"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_1 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_1.v[0] <= asFixedPoint(UInt<4>("h04"), 4) @[OneHotMuxSpec.scala 141:12]
    values_1.v[1] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 142:12]
    values_1.a.f1 <= asFixedPoint(UInt<4>("h06"), 3) @[OneHotMuxSpec.scala 143:12]
    values_1.a.f2 <= asFixedPoint(UInt<7>("h020"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_2 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_2.v[0] <= asFixedPoint(UInt<5>("h08"), 4) @[OneHotMuxSpec.scala 141:12]
    values_2.v[1] <= asFixedPoint(UInt<6>("h010"), 4) @[OneHotMuxSpec.scala 142:12]
    values_2.a.f1 <= asFixedPoint(UInt<5>("h0c"), 3) @[OneHotMuxSpec.scala 143:12]
    values_2.a.f2 <= asFixedPoint(UInt<8>("h040"), 5) @[OneHotMuxSpec.scala 144:12]
    wire values_3 : {v : Fixed<8><<4>>[2], a : {f1 : Fixed<7><<3>>, f2 : Fixed<9><<5>>}} @[OneHotMuxSpec.scala 140:17]
    values_3.v[0] <= asFixedPoint(UInt<5>("h0c"), 4) @[OneHotMuxSpec.scala 141:12]
    values_3.v[1] <= asFixedPoint(UInt<6>("h018"), 4) @[OneHotMuxSpec.scala 142:12]
    values_3.a.f1 <= asFixedPoint(UInt<6>("h012"), 3) @[OneHotMuxSpec.scala 143:12]
    values_3.a.f2 <= asFixedPoint(UInt<8>("h060"), 5) @[OneHotMuxSpec.scala 144:12]
    inst dut of ParameterizedAggregateOneHot @[OneHotMuxSpec.scala 173:21]
    dut.clock <= clock
    dut.reset <= reset
    dut.io.selectors[0] <= UInt<1>("h01") @[OneHotMuxSpec.scala 174:22]
    dut.io.selectors[1] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut.io.selectors[2] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut.io.selectors[3] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    node lo_lo = asUInt(dut.io.out.a.f2) @[OneHotMuxSpec.scala 176:29]
    node lo_hi = asUInt(dut.io.out.a.f1) @[OneHotMuxSpec.scala 176:29]
    node hi_lo = asUInt(dut.io.out.v[0]) @[OneHotMuxSpec.scala 176:29]
    node hi_hi = asUInt(dut.io.out.v[1]) @[OneHotMuxSpec.scala 176:29]
    node lo = cat(lo_hi, lo_lo) @[OneHotMuxSpec.scala 176:29]
    node hi = cat(hi_hi, hi_lo) @[OneHotMuxSpec.scala 176:29]
    node _T = cat(hi, lo) @[OneHotMuxSpec.scala 176:29]
    node lo_lo_1 = asUInt(values_0.a.f2) @[OneHotMuxSpec.scala 176:52]
    node lo_hi_1 = asUInt(values_0.a.f1) @[OneHotMuxSpec.scala 176:52]
    node hi_lo_1 = asUInt(values_0.v[0]) @[OneHotMuxSpec.scala 176:52]
    node hi_hi_1 = asUInt(values_0.v[1]) @[OneHotMuxSpec.scala 176:52]
    node lo_1 = cat(lo_hi_1, lo_lo_1) @[OneHotMuxSpec.scala 176:52]
    node hi_1 = cat(hi_hi_1, hi_lo_1) @[OneHotMuxSpec.scala 176:52]
    node _T_1 = cat(hi_1, lo_1) @[OneHotMuxSpec.scala 176:52]
    node _T_2 = eq(_T, _T_1) @[OneHotMuxSpec.scala 176:32]
    node _T_3 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 176:11]
    node _T_4 = or(_T_2, _T_3) @[OneHotMuxSpec.scala 176:11]
    node _T_5 = eq(_T_4, UInt<1>("h00")) @[OneHotMuxSpec.scala 176:11]
    when _T_5 : @[OneHotMuxSpec.scala 176:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:176 assert(dut.io.out.asUInt() === values(i).asUInt())\n") @[OneHotMuxSpec.scala 176:11]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 176:11]
      skip @[OneHotMuxSpec.scala 176:11]
    inst dut_1 of ParameterizedAggregateOneHot_1 @[OneHotMuxSpec.scala 173:21]
    dut_1.clock <= clock
    dut_1.reset <= reset
    dut_1.io.selectors[0] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_1.io.selectors[1] <= UInt<1>("h01") @[OneHotMuxSpec.scala 174:22]
    dut_1.io.selectors[2] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_1.io.selectors[3] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    node lo_lo_2 = asUInt(dut_1.io.out.a.f2) @[OneHotMuxSpec.scala 176:29]
    node lo_hi_2 = asUInt(dut_1.io.out.a.f1) @[OneHotMuxSpec.scala 176:29]
    node hi_lo_2 = asUInt(dut_1.io.out.v[0]) @[OneHotMuxSpec.scala 176:29]
    node hi_hi_2 = asUInt(dut_1.io.out.v[1]) @[OneHotMuxSpec.scala 176:29]
    node lo_2 = cat(lo_hi_2, lo_lo_2) @[OneHotMuxSpec.scala 176:29]
    node hi_2 = cat(hi_hi_2, hi_lo_2) @[OneHotMuxSpec.scala 176:29]
    node _T_6 = cat(hi_2, lo_2) @[OneHotMuxSpec.scala 176:29]
    node lo_lo_3 = asUInt(values_1.a.f2) @[OneHotMuxSpec.scala 176:52]
    node lo_hi_3 = asUInt(values_1.a.f1) @[OneHotMuxSpec.scala 176:52]
    node hi_lo_3 = asUInt(values_1.v[0]) @[OneHotMuxSpec.scala 176:52]
    node hi_hi_3 = asUInt(values_1.v[1]) @[OneHotMuxSpec.scala 176:52]
    node lo_3 = cat(lo_hi_3, lo_lo_3) @[OneHotMuxSpec.scala 176:52]
    node hi_3 = cat(hi_hi_3, hi_lo_3) @[OneHotMuxSpec.scala 176:52]
    node _T_7 = cat(hi_3, lo_3) @[OneHotMuxSpec.scala 176:52]
    node _T_8 = eq(_T_6, _T_7) @[OneHotMuxSpec.scala 176:32]
    node _T_9 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 176:11]
    node _T_10 = or(_T_8, _T_9) @[OneHotMuxSpec.scala 176:11]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[OneHotMuxSpec.scala 176:11]
    when _T_11 : @[OneHotMuxSpec.scala 176:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:176 assert(dut.io.out.asUInt() === values(i).asUInt())\n") @[OneHotMuxSpec.scala 176:11]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 176:11]
      skip @[OneHotMuxSpec.scala 176:11]
    inst dut_2 of ParameterizedAggregateOneHot_2 @[OneHotMuxSpec.scala 173:21]
    dut_2.clock <= clock
    dut_2.reset <= reset
    dut_2.io.selectors[0] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_2.io.selectors[1] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_2.io.selectors[2] <= UInt<1>("h01") @[OneHotMuxSpec.scala 174:22]
    dut_2.io.selectors[3] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    node lo_lo_4 = asUInt(dut_2.io.out.a.f2) @[OneHotMuxSpec.scala 176:29]
    node lo_hi_4 = asUInt(dut_2.io.out.a.f1) @[OneHotMuxSpec.scala 176:29]
    node hi_lo_4 = asUInt(dut_2.io.out.v[0]) @[OneHotMuxSpec.scala 176:29]
    node hi_hi_4 = asUInt(dut_2.io.out.v[1]) @[OneHotMuxSpec.scala 176:29]
    node lo_4 = cat(lo_hi_4, lo_lo_4) @[OneHotMuxSpec.scala 176:29]
    node hi_4 = cat(hi_hi_4, hi_lo_4) @[OneHotMuxSpec.scala 176:29]
    node _T_12 = cat(hi_4, lo_4) @[OneHotMuxSpec.scala 176:29]
    node lo_lo_5 = asUInt(values_2.a.f2) @[OneHotMuxSpec.scala 176:52]
    node lo_hi_5 = asUInt(values_2.a.f1) @[OneHotMuxSpec.scala 176:52]
    node hi_lo_5 = asUInt(values_2.v[0]) @[OneHotMuxSpec.scala 176:52]
    node hi_hi_5 = asUInt(values_2.v[1]) @[OneHotMuxSpec.scala 176:52]
    node lo_5 = cat(lo_hi_5, lo_lo_5) @[OneHotMuxSpec.scala 176:52]
    node hi_5 = cat(hi_hi_5, hi_lo_5) @[OneHotMuxSpec.scala 176:52]
    node _T_13 = cat(hi_5, lo_5) @[OneHotMuxSpec.scala 176:52]
    node _T_14 = eq(_T_12, _T_13) @[OneHotMuxSpec.scala 176:32]
    node _T_15 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 176:11]
    node _T_16 = or(_T_14, _T_15) @[OneHotMuxSpec.scala 176:11]
    node _T_17 = eq(_T_16, UInt<1>("h00")) @[OneHotMuxSpec.scala 176:11]
    when _T_17 : @[OneHotMuxSpec.scala 176:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:176 assert(dut.io.out.asUInt() === values(i).asUInt())\n") @[OneHotMuxSpec.scala 176:11]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 176:11]
      skip @[OneHotMuxSpec.scala 176:11]
    inst dut_3 of ParameterizedAggregateOneHot_3 @[OneHotMuxSpec.scala 173:21]
    dut_3.clock <= clock
    dut_3.reset <= reset
    dut_3.io.selectors[0] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_3.io.selectors[1] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_3.io.selectors[2] <= UInt<1>("h00") @[OneHotMuxSpec.scala 174:22]
    dut_3.io.selectors[3] <= UInt<1>("h01") @[OneHotMuxSpec.scala 174:22]
    node lo_lo_6 = asUInt(dut_3.io.out.a.f2) @[OneHotMuxSpec.scala 176:29]
    node lo_hi_6 = asUInt(dut_3.io.out.a.f1) @[OneHotMuxSpec.scala 176:29]
    node hi_lo_6 = asUInt(dut_3.io.out.v[0]) @[OneHotMuxSpec.scala 176:29]
    node hi_hi_6 = asUInt(dut_3.io.out.v[1]) @[OneHotMuxSpec.scala 176:29]
    node lo_6 = cat(lo_hi_6, lo_lo_6) @[OneHotMuxSpec.scala 176:29]
    node hi_6 = cat(hi_hi_6, hi_lo_6) @[OneHotMuxSpec.scala 176:29]
    node _T_18 = cat(hi_6, lo_6) @[OneHotMuxSpec.scala 176:29]
    node lo_lo_7 = asUInt(values_3.a.f2) @[OneHotMuxSpec.scala 176:52]
    node lo_hi_7 = asUInt(values_3.a.f1) @[OneHotMuxSpec.scala 176:52]
    node hi_lo_7 = asUInt(values_3.v[0]) @[OneHotMuxSpec.scala 176:52]
    node hi_hi_7 = asUInt(values_3.v[1]) @[OneHotMuxSpec.scala 176:52]
    node lo_7 = cat(lo_hi_7, lo_lo_7) @[OneHotMuxSpec.scala 176:52]
    node hi_7 = cat(hi_hi_7, hi_lo_7) @[OneHotMuxSpec.scala 176:52]
    node _T_19 = cat(hi_7, lo_7) @[OneHotMuxSpec.scala 176:52]
    node _T_20 = eq(_T_18, _T_19) @[OneHotMuxSpec.scala 176:32]
    node _T_21 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 176:11]
    node _T_22 = or(_T_20, _T_21) @[OneHotMuxSpec.scala 176:11]
    node _T_23 = eq(_T_22, UInt<1>("h00")) @[OneHotMuxSpec.scala 176:11]
    when _T_23 : @[OneHotMuxSpec.scala 176:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:176 assert(dut.io.out.asUInt() === values(i).asUInt())\n") @[OneHotMuxSpec.scala 176:11]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 176:11]
      skip @[OneHotMuxSpec.scala 176:11]
    node _T_24 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 179:7]
    node _T_25 = eq(_T_24, UInt<1>("h00")) @[OneHotMuxSpec.scala 179:7]
    when _T_25 : @[OneHotMuxSpec.scala 179:7]
      stop(clock, UInt<1>(1), 0) @[OneHotMuxSpec.scala 179:7]
      skip @[OneHotMuxSpec.scala 179:7]
    
