;chisel3.BuildInfo$@527a8665
circuit ClipSqueezeWrapDemo : 
  module ClipSqueezeWrapDemo : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    reg counter : Interval[-2, 5].1, clock with : (reset => (reset, asInterval(UInt<3>("h04"), -4, -4, 1))) @[IntervalSpec.scala 192:24]
    node _counter_T = add(counter, asInterval(UInt<2>("h01"), 1, 1, 1)) @[IntervalSpec.scala 194:23]
    node _counter_T_1 = squz(_counter_T, counter) @[IntervalSpec.scala 194:43]
    counter <= _counter_T_1 @[IntervalSpec.scala 194:11]
    node _T = gt(counter, asInterval(UInt<5>("h0a"), 10, 10, 1)) @[IntervalSpec.scala 195:16]
    when _T : @[IntervalSpec.scala 195:28]
      node _T_1 = bits(reset, 0, 0) @[IntervalSpec.scala 196:9]
      node _T_2 = eq(_T_1, UInt<1>("h00")) @[IntervalSpec.scala 196:9]
      when _T_2 : @[IntervalSpec.scala 196:9]
        stop(clock, UInt<1>(1), 0) @[IntervalSpec.scala 196:9]
        skip @[IntervalSpec.scala 196:9]
      skip @[IntervalSpec.scala 195:28]
    node _clipped_T = asInterval(UInt<1>("h00"), -2, 6, 1) @[IntervalSpec.scala 199:44]
    node clipped = clip(counter, _clipped_T) @[IntervalSpec.scala 199:29]
    node _squeezed_T = asInterval(UInt<1>("h00"), -2, 6, 1) @[IntervalSpec.scala 200:48]
    node squeezed = squz(counter, _squeezed_T) @[IntervalSpec.scala 200:33]
    node _wrapped_T = asInterval(UInt<1>("h00"), -2, 6, 1) @[IntervalSpec.scala 201:44]
    node wrapped = wrap(counter, _wrapped_T) @[IntervalSpec.scala 201:29]
    node _T_3 = eq(counter, asInterval(UInt<3>("h04"), -4, -4, 1)) @[IntervalSpec.scala 203:16]
    when _T_3 : @[IntervalSpec.scala 203:32]
      node _T_4 = bits(reset, 0, 0) @[IntervalSpec.scala 204:11]
      node _T_5 = eq(_T_4, UInt<1>("h00")) @[IntervalSpec.scala 204:11]
      when _T_5 : @[IntervalSpec.scala 204:11]
        printf(clock, UInt<1>(1), "Target range is range\"[-2,5].1\"\n") @[IntervalSpec.scala 204:11]
        skip @[IntervalSpec.scala 204:11]
      node _T_6 = bits(reset, 0, 0) @[IntervalSpec.scala 205:11]
      node _T_7 = eq(_T_6, UInt<1>("h00")) @[IntervalSpec.scala 205:11]
      when _T_7 : @[IntervalSpec.scala 205:11]
        printf(clock, UInt<1>(1), "value     clip      squeeze      wrap\n") @[IntervalSpec.scala 205:11]
        skip @[IntervalSpec.scala 205:11]
      skip @[IntervalSpec.scala 203:32]
    node _T_8 = asSInt(counter) @[IntervalSpec.scala 210:19]
    node _T_9 = asSInt(clipped) @[IntervalSpec.scala 211:19]
    node _T_10 = asSInt(squeezed) @[IntervalSpec.scala 212:20]
    node _T_11 = asSInt(wrapped) @[IntervalSpec.scala 213:19]
    node _T_12 = bits(reset, 0, 0) @[IntervalSpec.scala 208:9]
    node _T_13 = eq(_T_12, UInt<1>("h00")) @[IntervalSpec.scala 208:9]
    when _T_13 : @[IntervalSpec.scala 208:9]
      printf(clock, UInt<1>(1), "       %d       %d          %d         %d\n", _T_8, _T_9, _T_10, _T_11) @[IntervalSpec.scala 208:9]
      skip @[IntervalSpec.scala 208:9]
    
