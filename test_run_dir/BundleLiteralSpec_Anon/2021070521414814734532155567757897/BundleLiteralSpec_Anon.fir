;chisel3.BuildInfo$@527a8665
circuit BundleLiteralSpec_Anon : 
  module BundleLiteralSpec_Anon : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    node _T = eq(UInt<6>("h02a"), UInt<6>("h02a")) @[BundleLiteralSpec.scala 53:41]
    node _T_1 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 53:21]
    node _T_2 = or(_T, _T_1) @[BundleLiteralSpec.scala 53:21]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[BundleLiteralSpec.scala 53:21]
    when _T_3 : @[BundleLiteralSpec.scala 53:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:53 chisel3.assert(outsideBundleLit.a === 42.U)\n") @[BundleLiteralSpec.scala 53:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 53:21]
      skip @[BundleLiteralSpec.scala 53:21]
    node _T_4 = eq(UInt<1>("h01"), UInt<1>("h01")) @[BundleLiteralSpec.scala 54:41]
    node _T_5 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 54:21]
    node _T_6 = or(_T_4, _T_5) @[BundleLiteralSpec.scala 54:21]
    node _T_7 = eq(_T_6, UInt<1>("h00")) @[BundleLiteralSpec.scala 54:21]
    when _T_7 : @[BundleLiteralSpec.scala 54:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:54 chisel3.assert(outsideBundleLit.b === true.B)\n") @[BundleLiteralSpec.scala 54:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 54:21]
      skip @[BundleLiteralSpec.scala 54:21]
    node _T_8 = eq(UInt<1>("h01"), UInt<1>("h01")) @[BundleLiteralSpec.scala 55:41]
    node _T_9 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 55:21]
    node _T_10 = or(_T_8, _T_9) @[BundleLiteralSpec.scala 55:21]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[BundleLiteralSpec.scala 55:21]
    when _T_11 : @[BundleLiteralSpec.scala 55:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:55 chisel3.assert(outsideBundleLit.c === MyEnum.sB)\n") @[BundleLiteralSpec.scala 55:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 55:21]
      skip @[BundleLiteralSpec.scala 55:21]
    node lo = asUInt(UInt<1>("h01")) @[BundleLiteralSpec.scala 57:79]
    node hi = cat(UInt<6>("h02a"), UInt<1>("h01")) @[BundleLiteralSpec.scala 57:79]
    node _T_12 = cat(hi, lo) @[BundleLiteralSpec.scala 57:79]
    node _T_13 = eq(UInt<8>("h0ab"), _T_12) @[BundleLiteralSpec.scala 57:52]
    node _T_14 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 57:21]
    node _T_15 = or(_T_13, _T_14) @[BundleLiteralSpec.scala 57:21]
    node _T_16 = eq(_T_15, UInt<1>("h00")) @[BundleLiteralSpec.scala 57:21]
    when _T_16 : @[BundleLiteralSpec.scala 57:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:57 chisel3.assert(outsideBundleLit.litValue().U === outsideBundleLit.asUInt())\n") @[BundleLiteralSpec.scala 57:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 57:21]
      skip @[BundleLiteralSpec.scala 57:21]
    node _T_17 = eq(UInt<6>("h02a"), UInt<6>("h02a")) @[BundleLiteralSpec.scala 59:34]
    node _T_18 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 59:21]
    node _T_19 = or(_T_17, _T_18) @[BundleLiteralSpec.scala 59:21]
    node _T_20 = eq(_T_19, UInt<1>("h00")) @[BundleLiteralSpec.scala 59:21]
    when _T_20 : @[BundleLiteralSpec.scala 59:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:59 chisel3.assert(bundleLit.a === 42.U)\n") @[BundleLiteralSpec.scala 59:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 59:21]
      skip @[BundleLiteralSpec.scala 59:21]
    node _T_21 = eq(UInt<1>("h01"), UInt<1>("h01")) @[BundleLiteralSpec.scala 60:34]
    node _T_22 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 60:21]
    node _T_23 = or(_T_21, _T_22) @[BundleLiteralSpec.scala 60:21]
    node _T_24 = eq(_T_23, UInt<1>("h00")) @[BundleLiteralSpec.scala 60:21]
    when _T_24 : @[BundleLiteralSpec.scala 60:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:60 chisel3.assert(bundleLit.b === true.B)\n") @[BundleLiteralSpec.scala 60:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 60:21]
      skip @[BundleLiteralSpec.scala 60:21]
    node _T_25 = eq(UInt<1>("h01"), UInt<1>("h01")) @[BundleLiteralSpec.scala 61:34]
    node _T_26 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 61:21]
    node _T_27 = or(_T_25, _T_26) @[BundleLiteralSpec.scala 61:21]
    node _T_28 = eq(_T_27, UInt<1>("h00")) @[BundleLiteralSpec.scala 61:21]
    when _T_28 : @[BundleLiteralSpec.scala 61:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:61 chisel3.assert(bundleLit.c === MyEnum.sB)\n") @[BundleLiteralSpec.scala 61:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 61:21]
      skip @[BundleLiteralSpec.scala 61:21]
    node _T_29 = eq(UInt<6>("h02a"), UInt<6>("h02a")) @[BundleLiteralSpec.scala 63:34]
    node _T_30 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 63:21]
    node _T_31 = or(_T_29, _T_30) @[BundleLiteralSpec.scala 63:21]
    node _T_32 = eq(_T_31, UInt<1>("h00")) @[BundleLiteralSpec.scala 63:21]
    when _T_32 : @[BundleLiteralSpec.scala 63:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:63 chisel3.assert(bundleLit.a === outsideBundleLit.a)\n") @[BundleLiteralSpec.scala 63:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 63:21]
      skip @[BundleLiteralSpec.scala 63:21]
    node _T_33 = eq(UInt<1>("h01"), UInt<1>("h01")) @[BundleLiteralSpec.scala 64:34]
    node _T_34 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 64:21]
    node _T_35 = or(_T_33, _T_34) @[BundleLiteralSpec.scala 64:21]
    node _T_36 = eq(_T_35, UInt<1>("h00")) @[BundleLiteralSpec.scala 64:21]
    when _T_36 : @[BundleLiteralSpec.scala 64:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:64 chisel3.assert(bundleLit.b === outsideBundleLit.b)\n") @[BundleLiteralSpec.scala 64:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 64:21]
      skip @[BundleLiteralSpec.scala 64:21]
    node _T_37 = eq(UInt<1>("h01"), UInt<1>("h01")) @[BundleLiteralSpec.scala 65:34]
    node _T_38 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 65:21]
    node _T_39 = or(_T_37, _T_38) @[BundleLiteralSpec.scala 65:21]
    node _T_40 = eq(_T_39, UInt<1>("h00")) @[BundleLiteralSpec.scala 65:21]
    when _T_40 : @[BundleLiteralSpec.scala 65:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:65 chisel3.assert(bundleLit.c === outsideBundleLit.c)\n") @[BundleLiteralSpec.scala 65:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 65:21]
      skip @[BundleLiteralSpec.scala 65:21]
    wire bundleWire : {a : UInt<8>, b : UInt<1>, c : UInt<1>} @[BundleLiteralSpec.scala 67:28]
    bundleWire.c <= UInt<1>("h01") @[BundleLiteralSpec.scala 68:18]
    bundleWire.b <= UInt<1>("h01") @[BundleLiteralSpec.scala 68:18]
    bundleWire.a <= UInt<6>("h02a") @[BundleLiteralSpec.scala 68:18]
    node _T_41 = eq(bundleWire.a, UInt<6>("h02a")) @[BundleLiteralSpec.scala 70:35]
    node _T_42 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 70:21]
    node _T_43 = or(_T_41, _T_42) @[BundleLiteralSpec.scala 70:21]
    node _T_44 = eq(_T_43, UInt<1>("h00")) @[BundleLiteralSpec.scala 70:21]
    when _T_44 : @[BundleLiteralSpec.scala 70:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:70 chisel3.assert(bundleWire.a === 42.U)\n") @[BundleLiteralSpec.scala 70:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 70:21]
      skip @[BundleLiteralSpec.scala 70:21]
    node _T_45 = eq(bundleWire.b, UInt<1>("h01")) @[BundleLiteralSpec.scala 71:35]
    node _T_46 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 71:21]
    node _T_47 = or(_T_45, _T_46) @[BundleLiteralSpec.scala 71:21]
    node _T_48 = eq(_T_47, UInt<1>("h00")) @[BundleLiteralSpec.scala 71:21]
    when _T_48 : @[BundleLiteralSpec.scala 71:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:71 chisel3.assert(bundleWire.b === true.B)\n") @[BundleLiteralSpec.scala 71:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 71:21]
      skip @[BundleLiteralSpec.scala 71:21]
    node _T_49 = eq(bundleWire.c, UInt<1>("h01")) @[BundleLiteralSpec.scala 72:35]
    node _T_50 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 72:21]
    node _T_51 = or(_T_49, _T_50) @[BundleLiteralSpec.scala 72:21]
    node _T_52 = eq(_T_51, UInt<1>("h00")) @[BundleLiteralSpec.scala 72:21]
    when _T_52 : @[BundleLiteralSpec.scala 72:21]
      printf(clock, UInt<1>(1), "Assertion failed\n    at BundleLiteralSpec.scala:72 chisel3.assert(bundleWire.c === MyEnum.sB)\n") @[BundleLiteralSpec.scala 72:21]
      stop(clock, UInt<1>(1), 1) @[BundleLiteralSpec.scala 72:21]
      skip @[BundleLiteralSpec.scala 72:21]
    node _T_53 = bits(reset, 0, 0) @[BundleLiteralSpec.scala 74:11]
    node _T_54 = eq(_T_53, UInt<1>("h00")) @[BundleLiteralSpec.scala 74:11]
    when _T_54 : @[BundleLiteralSpec.scala 74:11]
      stop(clock, UInt<1>(1), 0) @[BundleLiteralSpec.scala 74:11]
      skip @[BundleLiteralSpec.scala 74:11]
    
