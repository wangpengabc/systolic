;chisel3.BuildInfo$@527a8665
circuit MixedVecAssignTester : 
  module MixedVecAssignTester : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    wire v : {7 : UInt<3>, 6 : UInt<3>, 5 : UInt<3>, 4 : UInt<3>, 3 : UInt<3>, 2 : UInt<3>, 1 : UInt<3>, 0 : UInt<3>} @[MixedVec.scala 27:26]
    v.0 <= UInt<3>("h00") @[MixedVec.scala 30:9]
    v.1 <= UInt<3>("h01") @[MixedVec.scala 30:9]
    v.2 <= UInt<3>("h07") @[MixedVec.scala 30:9]
    v.3 <= UInt<3>("h02") @[MixedVec.scala 30:9]
    v.4 <= UInt<3>("h06") @[MixedVec.scala 30:9]
    v.5 <= UInt<3>("h03") @[MixedVec.scala 30:9]
    v.6 <= UInt<3>("h04") @[MixedVec.scala 30:9]
    v.7 <= UInt<3>("h07") @[MixedVec.scala 30:9]
    node _T = eq(v.0, UInt<1>("h00")) @[MixedVecSpec.scala 14:14]
    node _T_1 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_2 = or(_T, _T_1) @[MixedVecSpec.scala 14:11]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_3 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_4 = eq(v.1, UInt<1>("h01")) @[MixedVecSpec.scala 14:14]
    node _T_5 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_6 = or(_T_4, _T_5) @[MixedVecSpec.scala 14:11]
    node _T_7 = eq(_T_6, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_7 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_8 = eq(v.2, UInt<3>("h07")) @[MixedVecSpec.scala 14:14]
    node _T_9 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_10 = or(_T_8, _T_9) @[MixedVecSpec.scala 14:11]
    node _T_11 = eq(_T_10, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_11 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_12 = eq(v.3, UInt<2>("h02")) @[MixedVecSpec.scala 14:14]
    node _T_13 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_14 = or(_T_12, _T_13) @[MixedVecSpec.scala 14:11]
    node _T_15 = eq(_T_14, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_15 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_16 = eq(v.4, UInt<3>("h06")) @[MixedVecSpec.scala 14:14]
    node _T_17 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_18 = or(_T_16, _T_17) @[MixedVecSpec.scala 14:11]
    node _T_19 = eq(_T_18, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_19 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_20 = eq(v.5, UInt<2>("h03")) @[MixedVecSpec.scala 14:14]
    node _T_21 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_22 = or(_T_20, _T_21) @[MixedVecSpec.scala 14:11]
    node _T_23 = eq(_T_22, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_23 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_24 = eq(v.6, UInt<3>("h04")) @[MixedVecSpec.scala 14:14]
    node _T_25 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_26 = or(_T_24, _T_25) @[MixedVecSpec.scala 14:11]
    node _T_27 = eq(_T_26, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_27 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_28 = eq(v.7, UInt<3>("h07")) @[MixedVecSpec.scala 14:14]
    node _T_29 = bits(reset, 0, 0) @[MixedVecSpec.scala 14:11]
    node _T_30 = or(_T_28, _T_29) @[MixedVecSpec.scala 14:11]
    node _T_31 = eq(_T_30, UInt<1>("h00")) @[MixedVecSpec.scala 14:11]
    when _T_31 : @[MixedVecSpec.scala 14:11]
      printf(clock, UInt<1>(1), "Assertion failed\n    at MixedVecSpec.scala:14 assert(a === b.asUInt)\n") @[MixedVecSpec.scala 14:11]
      stop(clock, UInt<1>(1), 1) @[MixedVecSpec.scala 14:11]
      skip @[MixedVecSpec.scala 14:11]
    node _T_32 = bits(reset, 0, 0) @[MixedVecSpec.scala 16:7]
    node _T_33 = eq(_T_32, UInt<1>("h00")) @[MixedVecSpec.scala 16:7]
    when _T_33 : @[MixedVecSpec.scala 16:7]
      stop(clock, UInt<1>(1), 0) @[MixedVecSpec.scala 16:7]
      skip @[MixedVecSpec.scala 16:7]
    
