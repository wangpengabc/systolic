;chisel3.BuildInfo$@527a8665
circuit SIntOneHotTester : 
  module SIntOneHotTester : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    wire out : SInt @[OneHotMuxSpec.scala 72:17]
    wire _out_WIRE : SInt<5> @[Mux.scala 27:72]
    node _out_T = asUInt(asSInt(UInt<3>("h05"))) @[Mux.scala 27:72]
    node _out_T_1 = asSInt(_out_T) @[Mux.scala 27:72]
    _out_WIRE <= _out_T_1 @[Mux.scala 27:72]
    wire _out_WIRE_1 : SInt<5> @[Mux.scala 27:72]
    node _out_T_2 = asUInt(asSInt(UInt<4>("h0b"))) @[Mux.scala 27:72]
    node _out_T_3 = asSInt(_out_T_2) @[Mux.scala 27:72]
    _out_WIRE_1 <= _out_T_3 @[Mux.scala 27:72]
    wire _out_WIRE_2 : SInt<5> @[Mux.scala 27:72]
    node _out_T_4 = asUInt(asSInt(UInt<4>("h09"))) @[Mux.scala 27:72]
    node _out_T_5 = asSInt(_out_T_4) @[Mux.scala 27:72]
    _out_WIRE_2 <= _out_T_5 @[Mux.scala 27:72]
    wire _out_WIRE_3 : SInt<5> @[Mux.scala 27:72]
    node _out_T_6 = asUInt(asSInt(UInt<5>("h015"))) @[Mux.scala 27:72]
    node _out_T_7 = asSInt(_out_T_6) @[Mux.scala 27:72]
    _out_WIRE_3 <= _out_T_7 @[Mux.scala 27:72]
    node _out_T_8 = mux(UInt<1>("h00"), _out_WIRE, asSInt(UInt<1>("h00"))) @[Mux.scala 27:72]
    node _out_T_9 = mux(UInt<1>("h01"), _out_WIRE_1, asSInt(UInt<1>("h00"))) @[Mux.scala 27:72]
    node _out_T_10 = mux(UInt<1>("h00"), _out_WIRE_2, asSInt(UInt<1>("h00"))) @[Mux.scala 27:72]
    node _out_T_11 = mux(UInt<1>("h00"), _out_WIRE_3, asSInt(UInt<1>("h00"))) @[Mux.scala 27:72]
    node _out_T_12 = or(_out_T_8, _out_T_9) @[Mux.scala 27:72]
    node _out_T_13 = asSInt(_out_T_12) @[Mux.scala 27:72]
    node _out_T_14 = or(_out_T_13, _out_T_10) @[Mux.scala 27:72]
    node _out_T_15 = asSInt(_out_T_14) @[Mux.scala 27:72]
    node _out_T_16 = or(_out_T_15, _out_T_11) @[Mux.scala 27:72]
    node _out_T_17 = asSInt(_out_T_16) @[Mux.scala 27:72]
    wire _out_WIRE_4 : SInt<5> @[Mux.scala 27:72]
    node _out_T_18 = asUInt(_out_T_17) @[Mux.scala 27:72]
    node _out_T_19 = asSInt(_out_T_18) @[Mux.scala 27:72]
    _out_WIRE_4 <= _out_T_19 @[Mux.scala 27:72]
    out <= _out_WIRE_4 @[OneHotMuxSpec.scala 73:7]
    node _T = eq(out, asSInt(UInt<4>("h0b"))) @[OneHotMuxSpec.scala 80:14]
    node _T_1 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 80:9]
    node _T_2 = or(_T, _T_1) @[OneHotMuxSpec.scala 80:9]
    node _T_3 = eq(_T_2, UInt<1>("h00")) @[OneHotMuxSpec.scala 80:9]
    when _T_3 : @[OneHotMuxSpec.scala 80:9]
      printf(clock, UInt<1>(1), "Assertion failed\n    at OneHotMuxSpec.scala:80 assert(out === (-5).S)\n") @[OneHotMuxSpec.scala 80:9]
      stop(clock, UInt<1>(1), 1) @[OneHotMuxSpec.scala 80:9]
      skip @[OneHotMuxSpec.scala 80:9]
    node _T_4 = bits(reset, 0, 0) @[OneHotMuxSpec.scala 82:7]
    node _T_5 = eq(_T_4, UInt<1>("h00")) @[OneHotMuxSpec.scala 82:7]
    when _T_5 : @[OneHotMuxSpec.scala 82:7]
      stop(clock, UInt<1>(1), 0) @[OneHotMuxSpec.scala 82:7]
      skip @[OneHotMuxSpec.scala 82:7]
    
