$version Generated by VerilatedVcd $end
$date Mon Jul  5 21:44:43 2021 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 : clock $end
  $var wire  1 ; reset $end
  $scope module RecordQueueTester $end
   $var wire  1 : clock $end
   $var wire  2 ( cycle [1:0] $end
   $var wire  1 : queue_clock $end
   $var wire 32 & queue_io_deq_bits_bar [31:0] $end
   $var wire 32 ' queue_io_deq_bits_foo [31:0] $end
   $var wire  1 % queue_io_deq_valid $end
   $var wire  1 # queue_io_enq_ready $end
   $var wire  1 $ queue_io_enq_valid $end
   $var wire  1 ; queue_reset $end
   $var wire  1 ; reset $end
   $var wire  1 ) wrap_wrap $end
   $scope module queue $end
    $var wire  1 : clock $end
    $var wire  2 . deq_ptr_value [1:0] $end
    $var wire  1 9 do_enq $end
    $var wire  1 7 empty $end
    $var wire  2 / enq_ptr_value [1:0] $end
    $var wire  1 8 full $end
    $var wire 32 & io_deq_bits_bar [31:0] $end
    $var wire 32 ' io_deq_bits_foo [31:0] $end
    $var wire  1 % io_deq_valid $end
    $var wire  1 # io_enq_ready $end
    $var wire  1 $ io_enq_valid $end
    $var wire  1 5 maybe_full $end
    $var wire  1 6 ptr_match $end
    $var wire 32 * ram_bar(0) [31:0] $end
    $var wire 32 + ram_bar(1) [31:0] $end
    $var wire 32 , ram_bar(2) [31:0] $end
    $var wire 32 - ram_bar(3) [31:0] $end
    $var wire  2 / ram_bar_MPORT_addr [1:0] $end
    $var wire 32 = ram_bar_MPORT_data [31:0] $end
    $var wire  1 0 ram_bar_MPORT_en $end
    $var wire  1 < ram_bar_MPORT_mask $end
    $var wire  2 . ram_bar_io_deq_bits_MPORT_addr [1:0] $end
    $var wire 32 & ram_bar_io_deq_bits_MPORT_data [31:0] $end
    $var wire  1 < ram_bar_io_deq_bits_MPORT_en $end
    $var wire 32 1 ram_foo(0) [31:0] $end
    $var wire 32 2 ram_foo(1) [31:0] $end
    $var wire 32 3 ram_foo(2) [31:0] $end
    $var wire 32 4 ram_foo(3) [31:0] $end
    $var wire  2 / ram_foo_MPORT_addr [1:0] $end
    $var wire 32 > ram_foo_MPORT_data [31:0] $end
    $var wire  1 0 ram_foo_MPORT_en $end
    $var wire  1 < ram_foo_MPORT_mask $end
    $var wire  2 . ram_foo_io_deq_bits_MPORT_addr [1:0] $end
    $var wire 32 ' ram_foo_io_deq_bits_MPORT_data [31:0] $end
    $var wire  1 < ram_foo_io_deq_bits_MPORT_en $end
    $var wire  1 ; reset $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
1$
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00 (
0)
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00 .
b00 /
10
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
05
16
17
08
19
0:
1;
1<
b00000000000000000001011000101110 =
b00000000000000000000010011010010 >
#1
b00000000000000000001011000101110 &
b00000000000000000000010011010010 '
b00000000000000000001011000101110 *
b00000000000000000000010011010010 1
1:
#2
#3
#4
#5
#6
0:
#7
#8
#9
#10
0;
#11
0$
1%
b01 (
b01 /
00
15
06
07
09
1:
#12
#13
#14
#15
#16
0:
#17
#18
#19
#20
#21
0%
b00000000000000000000000000000000 &
b00000000000000000000000000000000 '
b10 (
b01 .
05
16
17
1:
#22
#23
#24
#25
#26
0:
#27
#28
#29
#30
#31
b11 (
1)
1:
#32
#33
#34
#35
#36
0:
#37
#38
#39
#40
