[0m[[0m[0minfo[0m] [0m[0mcompiling 139 Scala sources to /home/wangpeng/test/playground_test/out/foreign-modules/dependencies/chisel3/chisel3CrossModule/test/compile/dest/classes ...[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AdderTree.scala:13:6: reflective access of structural type member value numOut should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m----[0m
[0m[[0m[33mwarn[0m] [0m[0mThis can be achieved by adding the import clause 'import scala.language.reflectiveCalls'[0m
[0m[[0m[33mwarn[0m] [0m[0mor by setting the compiler option -language:reflectiveCalls.[0m
[0m[[0m[33mwarn[0m] [0m[0mSee the Scaladoc for value scala.language.reflectiveCalls for a discussion[0m
[0m[[0m[33mwarn[0m] [0m[0mwhy the feature should be explicitly enabled.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.numOut := io.numIn.reduceTree((a : T, b : T) => (a + b))[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AdderTree.scala:13:19: reflective access of structural type member value numIn should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.numOut := io.numIn.reduceTree((a : T, b : T) => (a + b))[0m
[0m[[0m[33mwarn[0m] [0m[0m                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AdderTree.scala:19:10: reflective access of structural type member value numIn should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  dut.io.numIn := VecInit(numsToAdd.map(x => x.asUInt(bitWidth.W)))[0m
[0m[[0m[33mwarn[0m] [0m[0m         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AdderTree.scala:20:27: reflective access of structural type member value numOut should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
2021-07-05 21:34:01,528 main ERROR Unable to format msg:   val sumCorrect = dut.io.numOut === (numsToAdd.reduce(_+_) % (1 << bitWidth)).asUInt(bitWidth.W) java.util.UnknownFormatConversionException: Conversion = ' '
	at java.base/java.util.Formatter.checkText(Formatter.java:2732)
	at java.base/java.util.Formatter.parse(Formatter.java:2718)
	at java.base/java.util.Formatter.format(Formatter.java:2655)
	at java.base/java.util.Formatter.format(Formatter.java:2609)
	at java.base/java.lang.String.format(String.java:2938)
	at org.apache.logging.log4j.message.StringFormattedMessage.formatMessage(StringFormattedMessage.java:116)
	at org.apache.logging.log4j.message.StringFormattedMessage.getFormattedMessage(StringFormattedMessage.java:88)
	at sbt.internal.util.Appender.$anonfun$appendMessage$1(ConsoleAppender.scala:508)
	at sbt.internal.util.Appender.appendLog(ConsoleAppender.scala:426)
	at sbt.internal.util.Appender.appendLog$(ConsoleAppender.scala:425)
	at sbt.internal.util.ConsoleAppender.appendLog(ConsoleAppender.scala:336)
	at sbt.internal.util.Appender.appendMessage(ConsoleAppender.scala:508)
	at sbt.internal.util.Appender.appendMessage$(ConsoleAppender.scala:504)
	at sbt.internal.util.ConsoleAppender.appendMessage(ConsoleAppender.scala:336)
	at sbt.internal.util.ConsoleAppender.$anonfun$toLog4J$1(ConsoleAppender.scala:350)
	at sbt.internal.util.ConsoleAppender.$anonfun$toLog4J$1$adapted(ConsoleAppender.scala:347)
	at sbt.internal.util.Log4JConsoleAppender.append(ConsoleAppender.scala:571)
	at sbt.internal.util.ConsoleAppenderFromLog4J.appendLog(ConsoleAppender.scala:584)
	at sbt.internal.util.Appender.$anonfun$appendMessageContent$3(ConsoleAppender.scala:544)
	at sbt.internal.util.Appender.$anonfun$appendMessageContent$3$adapted(ConsoleAppender.scala:542)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at sbt.internal.util.Appender.appendEvent$1(ConsoleAppender.scala:542)
	at sbt.internal.util.Appender.appendMessageContent(ConsoleAppender.scala:553)
	at sbt.internal.util.Appender.appendObjectEvent(ConsoleAppender.scala:558)
	at sbt.internal.util.Appender.appendObjectEvent$(ConsoleAppender.scala:557)
	at sbt.internal.util.ConsoleAppenderFromLog4J.appendObjectEvent(ConsoleAppender.scala:573)
	at sbt.util.LoggerContext$LoggerContextImpl$Log.$anonfun$log$4(LoggerContext.scala:129)
	at java.base/java.util.Vector.forEach(Vector.java:1388)
	at sbt.util.LoggerContext$LoggerContextImpl$Log.log(LoggerContext.scala:127)
	at sbt.internal.util.ManagedLogger.logEvent(ManagedLogger.scala:92)
	at sbt.internal.util.ManagedLogger.warnEvent(ManagedLogger.scala:80)
	at sbt.internal.inc.ManagedLoggedReporter.logWarning(LoggedReporter.scala:87)
	at sbt.internal.inc.LoggedReporter.display(LoggedReporter.scala:168)
	at sbt.internal.inc.LoggedReporter.log(LoggedReporter.scala:142)
	at xsbt.DelegatingReporter.info0(DelegatingReporter.scala:185)
	at scala.tools.nsc.reporters.Reporter.nonProtectedInfo0(Reporter.scala:31)
	at scala.tools.nsc.reporters.MakeFilteringForwardingReporter.doReport(ForwardingReporter.scala:59)
	at scala.tools.nsc.reporters.FilteringReporter.info0(Reporter.scala:92)
	at scala.reflect.internal.Reporter.filteredInfo(Reporting.scala:116)
	at scala.reflect.internal.Reporter.warning(Reporting.scala:110)
	at scala.tools.nsc.Reporting$PerRunReporting.issueWarning(Reporting.scala:114)
	at scala.tools.nsc.Reporting$PerRunReporting.$anonfun$reportSuspendedMessages$3(Reporting.scala:94)
	at scala.tools.nsc.Reporting$PerRunReporting.$anonfun$reportSuspendedMessages$3$adapted(Reporting.scala:92)
	at scala.collection.mutable.LinkedHashSet.foreach(LinkedHashSet.scala:95)
	at scala.tools.nsc.Reporting$PerRunReporting.reportSuspendedMessages(Reporting.scala:92)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$TyperPhase.run(Analyzer.scala:111)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1511)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1495)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1488)
	at scala.tools.nsc.Global$Run.compileFiles(Global.scala:1599)
	at xsbt.CachedCompiler0.run(CompilerBridge.scala:163)
	at xsbt.CachedCompiler0.run(CompilerBridge.scala:134)
	at xsbt.CompilerBridge.run(CompilerBridge.scala:39)
	at sbt.internal.inc.AnalyzingCompiler.compile(AnalyzingCompiler.scala:91)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$7(MixedAnalyzingCompiler.scala:186)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at sbt.internal.inc.MixedAnalyzingCompiler.timed(MixedAnalyzingCompiler.scala:241)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$4(MixedAnalyzingCompiler.scala:176)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$4$adapted(MixedAnalyzingCompiler.scala:157)
	at sbt.internal.inc.JarUtils$.withPreviousJar(JarUtils.scala:239)
	at sbt.internal.inc.MixedAnalyzingCompiler.compileScala$1(MixedAnalyzingCompiler.scala:157)
	at sbt.internal.inc.MixedAnalyzingCompiler.compile(MixedAnalyzingCompiler.scala:204)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1$adapted(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.Incremental$.$anonfun$apply$5(Incremental.scala:174)
	at sbt.internal.inc.Incremental$.$anonfun$apply$5$adapted(Incremental.scala:172)
	at sbt.internal.inc.Incremental$$anon$2.run(Incremental.scala:457)
	at sbt.internal.inc.IncrementalCommon$CycleState.next(IncrementalCommon.scala:116)
	at sbt.internal.inc.IncrementalCommon$$anon$1.next(IncrementalCommon.scala:56)
	at sbt.internal.inc.IncrementalCommon$$anon$1.next(IncrementalCommon.scala:52)
	at sbt.internal.inc.IncrementalCommon.cycle(IncrementalCommon.scala:261)
	at sbt.internal.inc.Incremental$.$anonfun$incrementalCompile$8(Incremental.scala:412)
	at sbt.internal.inc.Incremental$.withClassfileManager(Incremental.scala:499)
	at sbt.internal.inc.Incremental$.incrementalCompile(Incremental.scala:399)
	at sbt.internal.inc.Incremental$.apply(Incremental.scala:166)
	at sbt.internal.inc.IncrementalCompilerImpl.compileInternal(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileIncrementally$1(IncrementalCompilerImpl.scala:482)
	at sbt.internal.inc.IncrementalCompilerImpl.handleCompilationError(IncrementalCompilerImpl.scala:332)
	at sbt.internal.inc.IncrementalCompilerImpl.compileIncrementally(IncrementalCompilerImpl.scala:420)
	at sbt.internal.inc.IncrementalCompilerImpl.compile(IncrementalCompilerImpl.scala:137)
	at mill.scalalib.worker.ZincWorkerImpl.compileInternal(ZincWorkerImpl.scala:512)
	at mill.scalalib.worker.ZincWorkerImpl.$anonfun$compileMixed0$1(ZincWorkerImpl.scala:311)
	at mill.api.FixSizedCache.withCachedValue(FixSizedCache.scala:62)
	at mill.scalalib.worker.ZincWorkerImpl.withCompilers(ZincWorkerImpl.scala:397)
	at mill.scalalib.worker.ZincWorkerImpl.compileMixed0(ZincWorkerImpl.scala:310)
	at mill.scalalib.worker.ZincWorkerImpl.compileMixed(ZincWorkerImpl.scala:280)
	at mill.scalalib.ScalaModule.$anonfun$compile$2(ScalaModule.scala:174)
	at mill.define.ApplyerGenerated.$anonfun$zipMap$9(ApplicativeGenerated.scala:21)
	at mill.define.Task$MappedDest.evaluate(Task.scala:396)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$13(Evaluator.scala:496)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withErr(Console.scala:193)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$12(Evaluator.scala:496)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withOut(Console.scala:164)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$11(Evaluator.scala:495)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withIn(Console.scala:227)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$8(Evaluator.scala:494)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$8$adapted(Evaluator.scala:445)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at mill.eval.Evaluator.evaluateGroup(Evaluator.scala:445)
	at mill.eval.Evaluator.$anonfun$evaluateGroupCached$13(Evaluator.scala:342)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at mill.eval.Evaluator.evaluateGroupCached(Evaluator.scala:333)
	at mill.eval.Evaluator.$anonfun$sequentialEvaluate$2(Evaluator.scala:116)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1288)
	at mill.eval.Evaluator.sequentialEvaluate(Evaluator.scala:93)
	at mill.eval.Evaluator.evaluate(Evaluator.scala:79)
	at mill.main.RunScript$.evaluate(RunScript.scala:203)
	at mill.main.RunScript$.$anonfun$evaluateTasks$1(RunScript.scala:189)
	at scala.util.Either.map(Either.scala:382)
	at mill.main.RunScript$.evaluateTasks(RunScript.scala:188)
	at mill.main.RunScript$.$anonfun$runScript$4(RunScript.scala:67)
	at ammonite.util.Res$Success.flatMap(Res.scala:62)
	at mill.main.RunScript$.runScript(RunScript.scala:66)
	at mill.main.MainRunner.$anonfun$runScript$1(MainRunner.scala:119)
	at mill.main.MainRunner.watchLoop2(MainRunner.scala:68)
	at mill.main.MainRunner.runScript(MainRunner.scala:94)
	at mill.MillMain$.main0(MillMain.scala:299)
	at mill.MillMain$.main(MillMain.scala:104)
	at mill.MillMain.main(MillMain.scala)

[0m[[0m[33mwarn[0m] [0m[0m  val sumCorrect = dut.io.numOut === (numsToAdd.reduce(_+_) % (1 << bitWidth)).asUInt(bitWidth.W)[0m
[0m[[0m[33mwarn[0m] [0m[0m                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogIntegrationSpec.scala:81:6: reflective access of structural type member value ports should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.ports <> mods.flatMap(_.io.port)[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogIntegrationSpec.scala:86:17: reflective access of structural type member value bus1 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  attach(con.io.bus1, mods.head.io.bus)[0m
[0m[[0m[33mwarn[0m] [0m[0m                ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogIntegrationSpec.scala:87:17: reflective access of structural type member value bus2 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  attach(con.io.bus2, mods.last.io.bus)[0m
[0m[[0m[33mwarn[0m] [0m[0m                ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogIntegrationSpec.scala:101:6: reflective access of structural type member value ports should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.ports <> mods.flatMap(_.io.port)[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogIntegrationSpec.scala:116:46: reflective access of structural type member value ports should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  val (cycle, done) = Counter(true.B, dut.io.ports.size)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogIntegrationSpec.scala:117:29: reflective access of structural type member value ports should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  for ((dut, idx) <- dut.io.ports.zipWithIndex) {[0m
[0m[[0m[33mwarn[0m] [0m[0m                            ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:49:6: reflective access of structural type member value bus1 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.bus1 <> io.bus2[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:49:17: reflective access of structural type member value bus2 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.bus1 <> io.bus2[0m
[0m[[0m[33mwarn[0m] [0m[0m                ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:65:26: reflective access of structural type member value analog should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  def bus = vecBunBus(0).analog[0m
[0m[[0m[33mwarn[0m] [0m[0m                         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:188:10: reflective access of structural type member value a should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      io.a := DontCare[0m
[0m[[0m[33mwarn[0m] [0m[0m         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:194:10: reflective access of structural type member value a should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      io.a <> DontCare[0m
[0m[[0m[33mwarn[0m] [0m[0m         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:208:15: reflective access of structural type member value a should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      w <> io.a[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:215:15: reflective access of structural type member value a should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      w <> io.a[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:265:20: reflective access of structural type member value bus1 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      connector.io.bus1 <> writer.io.bus[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnalogSpec.scala:266:37: reflective access of structural type member value bus2 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      reader.io.bus <> connector.io.bus2[0m
[0m[[0m[33mwarn[0m] [0m[0m                                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:71:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:71:16: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:75:15: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  identify(io.out, s"ModC(ignore param)")[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:89:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  modC.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:89:20: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  modC.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:90:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := modC.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:90:21: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := modC.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:94:15: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  identify(io.out, s"ModA.io.out($annoParam)")[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:95:15: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  identify(io.out, s"ModA.io.out(ignore_param)")[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:104:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  modC.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:104:20: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  modC.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:105:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := modC.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:105:21: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := modC.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:107:15: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  identify(io.in, s"modB.io.in annotated from inside modB")[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:121:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  x := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:122:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  modA.io.in := x[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:123:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  modB.io.in := x[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:125:16: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  y := modA.io.out + modB.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:125:30: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  y := modA.io.out + modB.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:126:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := y[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotatingDiamondSpec.scala:130:20: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  identify(modB.io.in, s"modB.io.in annotated from outside modB")[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:18:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
2021-07-05 21:34:01,547 main ERROR Unable to format msg:   io.out := io.in +% 1.U java.util.UnknownFormatConversionException: Conversion = ' '
	at java.base/java.util.Formatter.checkText(Formatter.java:2732)
	at java.base/java.util.Formatter.parse(Formatter.java:2718)
	at java.base/java.util.Formatter.format(Formatter.java:2655)
	at java.base/java.util.Formatter.format(Formatter.java:2609)
	at java.base/java.lang.String.format(String.java:2938)
	at org.apache.logging.log4j.message.StringFormattedMessage.formatMessage(StringFormattedMessage.java:116)
	at org.apache.logging.log4j.message.StringFormattedMessage.getFormattedMessage(StringFormattedMessage.java:88)
	at sbt.internal.util.Appender.$anonfun$appendMessage$1(ConsoleAppender.scala:508)
	at sbt.internal.util.Appender.appendLog(ConsoleAppender.scala:426)
	at sbt.internal.util.Appender.appendLog$(ConsoleAppender.scala:425)
	at sbt.internal.util.ConsoleAppender.appendLog(ConsoleAppender.scala:336)
	at sbt.internal.util.Appender.appendMessage(ConsoleAppender.scala:508)
	at sbt.internal.util.Appender.appendMessage$(ConsoleAppender.scala:504)
	at sbt.internal.util.ConsoleAppender.appendMessage(ConsoleAppender.scala:336)
	at sbt.internal.util.ConsoleAppender.$anonfun$toLog4J$1(ConsoleAppender.scala:350)
	at sbt.internal.util.ConsoleAppender.$anonfun$toLog4J$1$adapted(ConsoleAppender.scala:347)
	at sbt.internal.util.Log4JConsoleAppender.append(ConsoleAppender.scala:571)
	at sbt.internal.util.ConsoleAppenderFromLog4J.appendLog(ConsoleAppender.scala:584)
	at sbt.internal.util.Appender.$anonfun$appendMessageContent$3(ConsoleAppender.scala:544)
	at sbt.internal.util.Appender.$anonfun$appendMessageContent$3$adapted(ConsoleAppender.scala:542)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at sbt.internal.util.Appender.appendEvent$1(ConsoleAppender.scala:542)
	at sbt.internal.util.Appender.appendMessageContent(ConsoleAppender.scala:553)
	at sbt.internal.util.Appender.appendObjectEvent(ConsoleAppender.scala:558)
	at sbt.internal.util.Appender.appendObjectEvent$(ConsoleAppender.scala:557)
	at sbt.internal.util.ConsoleAppenderFromLog4J.appendObjectEvent(ConsoleAppender.scala:573)
	at sbt.util.LoggerContext$LoggerContextImpl$Log.$anonfun$log$4(LoggerContext.scala:129)
	at java.base/java.util.Vector.forEach(Vector.java:1388)
	at sbt.util.LoggerContext$LoggerContextImpl$Log.log(LoggerContext.scala:127)
	at sbt.internal.util.ManagedLogger.logEvent(ManagedLogger.scala:92)
	at sbt.internal.util.ManagedLogger.warnEvent(ManagedLogger.scala:80)
	at sbt.internal.inc.ManagedLoggedReporter.logWarning(LoggedReporter.scala:87)
	at sbt.internal.inc.LoggedReporter.display(LoggedReporter.scala:168)
	at sbt.internal.inc.LoggedReporter.log(LoggedReporter.scala:142)
	at xsbt.DelegatingReporter.info0(DelegatingReporter.scala:185)
	at scala.tools.nsc.reporters.Reporter.nonProtectedInfo0(Reporter.scala:31)
	at scala.tools.nsc.reporters.MakeFilteringForwardingReporter.doReport(ForwardingReporter.scala:59)
	at scala.tools.nsc.reporters.FilteringReporter.info0(Reporter.scala:92)
	at scala.reflect.internal.Reporter.filteredInfo(Reporting.scala:116)
	at scala.reflect.internal.Reporter.warning(Reporting.scala:110)
	at scala.tools.nsc.Reporting$PerRunReporting.issueWarning(Reporting.scala:114)
	at scala.tools.nsc.Reporting$PerRunReporting.$anonfun$reportSuspendedMessages$3(Reporting.scala:94)
	at scala.tools.nsc.Reporting$PerRunReporting.$anonfun$reportSuspendedMessages$3$adapted(Reporting.scala:92)
	at scala.collection.mutable.LinkedHashSet.foreach(LinkedHashSet.scala:95)
	at scala.tools.nsc.Reporting$PerRunReporting.reportSuspendedMessages(Reporting.scala:92)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$TyperPhase.run(Analyzer.scala:111)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1511)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1495)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1488)
	at scala.tools.nsc.Global$Run.compileFiles(Global.scala:1599)
	at xsbt.CachedCompiler0.run(CompilerBridge.scala:163)
	at xsbt.CachedCompiler0.run(CompilerBridge.scala:134)
	at xsbt.CompilerBridge.run(CompilerBridge.scala:39)
	at sbt.internal.inc.AnalyzingCompiler.compile(AnalyzingCompiler.scala:91)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$7(MixedAnalyzingCompiler.scala:186)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at sbt.internal.inc.MixedAnalyzingCompiler.timed(MixedAnalyzingCompiler.scala:241)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$4(MixedAnalyzingCompiler.scala:176)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$4$adapted(MixedAnalyzingCompiler.scala:157)
	at sbt.internal.inc.JarUtils$.withPreviousJar(JarUtils.scala:239)
	at sbt.internal.inc.MixedAnalyzingCompiler.compileScala$1(MixedAnalyzingCompiler.scala:157)
	at sbt.internal.inc.MixedAnalyzingCompiler.compile(MixedAnalyzingCompiler.scala:204)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1$adapted(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.Incremental$.$anonfun$apply$5(Incremental.scala:174)
	at sbt.internal.inc.Incremental$.$anonfun$apply$5$adapted(Incremental.scala:172)
	at sbt.internal.inc.Incremental$$anon$2.run(Incremental.scala:457)
	at sbt.internal.inc.IncrementalCommon$CycleState.next(IncrementalCommon.scala:116)
	at sbt.internal.inc.IncrementalCommon$$anon$1.next(IncrementalCommon.scala:56)
	at sbt.internal.inc.IncrementalCommon$$anon$1.next(IncrementalCommon.scala:52)
	at sbt.internal.inc.IncrementalCommon.cycle(IncrementalCommon.scala:261)
	at sbt.internal.inc.Incremental$.$anonfun$incrementalCompile$8(Incremental.scala:412)
	at sbt.internal.inc.Incremental$.withClassfileManager(Incremental.scala:499)
	at sbt.internal.inc.Incremental$.incrementalCompile(Incremental.scala:399)
	at sbt.internal.inc.Incremental$.apply(Incremental.scala:166)
	at sbt.internal.inc.IncrementalCompilerImpl.compileInternal(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileIncrementally$1(IncrementalCompilerImpl.scala:482)
	at sbt.internal.inc.IncrementalCompilerImpl.handleCompilationError(IncrementalCompilerImpl.scala:332)
	at sbt.internal.inc.IncrementalCompilerImpl.compileIncrementally(IncrementalCompilerImpl.scala:420)
	at sbt.internal.inc.IncrementalCompilerImpl.compile(IncrementalCompilerImpl.scala:137)
	at mill.scalalib.worker.ZincWorkerImpl.compileInternal(ZincWorkerImpl.scala:512)
	at mill.scalalib.worker.ZincWorkerImpl.$anonfun$compileMixed0$1(ZincWorkerImpl.scala:311)
	at mill.api.FixSizedCache.withCachedValue(FixSizedCache.scala:62)
	at mill.scalalib.worker.ZincWorkerImpl.withCompilers(ZincWorkerImpl.scala:397)
	at mill.scalalib.worker.ZincWorkerImpl.compileMixed0(ZincWorkerImpl.scala:310)
	at mill.scalalib.worker.ZincWorkerImpl.compileMixed(ZincWorkerImpl.scala:280)
	at mill.scalalib.ScalaModule.$anonfun$compile$2(ScalaModule.scala:174)
	at mill.define.ApplyerGenerated.$anonfun$zipMap$9(ApplicativeGenerated.scala:21)
	at mill.define.Task$MappedDest.evaluate(Task.scala:396)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$13(Evaluator.scala:496)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withErr(Console.scala:193)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$12(Evaluator.scala:496)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withOut(Console.scala:164)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$11(Evaluator.scala:495)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withIn(Console.scala:227)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$8(Evaluator.scala:494)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$8$adapted(Evaluator.scala:445)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at mill.eval.Evaluator.evaluateGroup(Evaluator.scala:445)
	at mill.eval.Evaluator.$anonfun$evaluateGroupCached$13(Evaluator.scala:342)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at mill.eval.Evaluator.evaluateGroupCached(Evaluator.scala:333)
	at mill.eval.Evaluator.$anonfun$sequentialEvaluate$2(Evaluator.scala:116)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1288)
	at mill.eval.Evaluator.sequentialEvaluate(Evaluator.scala:93)
	at mill.eval.Evaluator.evaluate(Evaluator.scala:79)
	at mill.main.RunScript$.evaluate(RunScript.scala:203)
	at mill.main.RunScript$.$anonfun$evaluateTasks$1(RunScript.scala:189)
	at scala.util.Either.map(Either.scala:382)
	at mill.main.RunScript$.evaluateTasks(RunScript.scala:188)
	at mill.main.RunScript$.$anonfun$runScript$4(RunScript.scala:67)
	at ammonite.util.Res$Success.flatMap(Res.scala:62)
	at mill.main.RunScript$.runScript(RunScript.scala:66)
	at mill.main.MainRunner.$anonfun$runScript$1(MainRunner.scala:119)
	at mill.main.MainRunner.watchLoop2(MainRunner.scala:68)
	at mill.main.MainRunner.runScript(MainRunner.scala:94)
	at mill.MillMain$.main0(MillMain.scala:299)
	at mill.MillMain$.main(MillMain.scala:104)
	at mill.MillMain.main(MillMain.scala)

[0m[[0m[33mwarn[0m] [0m[0m  io.out := io.in +% 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:18:16: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
2021-07-05 21:34:01,550 main ERROR Unable to format msg:   io.out := io.in +% 1.U java.util.UnknownFormatConversionException: Conversion = ' '
	at java.base/java.util.Formatter.checkText(Formatter.java:2732)
	at java.base/java.util.Formatter.parse(Formatter.java:2718)
	at java.base/java.util.Formatter.format(Formatter.java:2655)
	at java.base/java.util.Formatter.format(Formatter.java:2609)
	at java.base/java.lang.String.format(String.java:2938)
	at org.apache.logging.log4j.message.StringFormattedMessage.formatMessage(StringFormattedMessage.java:116)
	at org.apache.logging.log4j.message.StringFormattedMessage.getFormattedMessage(StringFormattedMessage.java:88)
	at sbt.internal.util.Appender.$anonfun$appendMessage$1(ConsoleAppender.scala:508)
	at sbt.internal.util.Appender.appendLog(ConsoleAppender.scala:426)
	at sbt.internal.util.Appender.appendLog$(ConsoleAppender.scala:425)
	at sbt.internal.util.ConsoleAppender.appendLog(ConsoleAppender.scala:336)
	at sbt.internal.util.Appender.appendMessage(ConsoleAppender.scala:508)
	at sbt.internal.util.Appender.appendMessage$(ConsoleAppender.scala:504)
	at sbt.internal.util.ConsoleAppender.appendMessage(ConsoleAppender.scala:336)
	at sbt.internal.util.ConsoleAppender.$anonfun$toLog4J$1(ConsoleAppender.scala:350)
	at sbt.internal.util.ConsoleAppender.$anonfun$toLog4J$1$adapted(ConsoleAppender.scala:347)
	at sbt.internal.util.Log4JConsoleAppender.append(ConsoleAppender.scala:571)
	at sbt.internal.util.ConsoleAppenderFromLog4J.appendLog(ConsoleAppender.scala:584)
	at sbt.internal.util.Appender.$anonfun$appendMessageContent$3(ConsoleAppender.scala:544)
	at sbt.internal.util.Appender.$anonfun$appendMessageContent$3$adapted(ConsoleAppender.scala:542)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at sbt.internal.util.Appender.appendEvent$1(ConsoleAppender.scala:542)
	at sbt.internal.util.Appender.appendMessageContent(ConsoleAppender.scala:553)
	at sbt.internal.util.Appender.appendObjectEvent(ConsoleAppender.scala:558)
	at sbt.internal.util.Appender.appendObjectEvent$(ConsoleAppender.scala:557)
	at sbt.internal.util.ConsoleAppenderFromLog4J.appendObjectEvent(ConsoleAppender.scala:573)
	at sbt.util.LoggerContext$LoggerContextImpl$Log.$anonfun$log$4(LoggerContext.scala:129)
	at java.base/java.util.Vector.forEach(Vector.java:1388)
	at sbt.util.LoggerContext$LoggerContextImpl$Log.log(LoggerContext.scala:127)
	at sbt.internal.util.ManagedLogger.logEvent(ManagedLogger.scala:92)
	at sbt.internal.util.ManagedLogger.warnEvent(ManagedLogger.scala:80)
	at sbt.internal.inc.ManagedLoggedReporter.logWarning(LoggedReporter.scala:87)
	at sbt.internal.inc.LoggedReporter.display(LoggedReporter.scala:168)
	at sbt.internal.inc.LoggedReporter.log(LoggedReporter.scala:142)
	at xsbt.DelegatingReporter.info0(DelegatingReporter.scala:185)
	at scala.tools.nsc.reporters.Reporter.nonProtectedInfo0(Reporter.scala:31)
	at scala.tools.nsc.reporters.MakeFilteringForwardingReporter.doReport(ForwardingReporter.scala:59)
	at scala.tools.nsc.reporters.FilteringReporter.info0(Reporter.scala:92)
	at scala.reflect.internal.Reporter.filteredInfo(Reporting.scala:116)
	at scala.reflect.internal.Reporter.warning(Reporting.scala:110)
	at scala.tools.nsc.Reporting$PerRunReporting.issueWarning(Reporting.scala:114)
	at scala.tools.nsc.Reporting$PerRunReporting.$anonfun$reportSuspendedMessages$3(Reporting.scala:94)
	at scala.tools.nsc.Reporting$PerRunReporting.$anonfun$reportSuspendedMessages$3$adapted(Reporting.scala:92)
	at scala.collection.mutable.LinkedHashSet.foreach(LinkedHashSet.scala:95)
	at scala.tools.nsc.Reporting$PerRunReporting.reportSuspendedMessages(Reporting.scala:92)
	at scala.tools.nsc.typechecker.Analyzer$typerFactory$TyperPhase.run(Analyzer.scala:111)
	at scala.tools.nsc.Global$Run.compileUnitsInternal(Global.scala:1511)
	at scala.tools.nsc.Global$Run.compileUnits(Global.scala:1495)
	at scala.tools.nsc.Global$Run.compileSources(Global.scala:1488)
	at scala.tools.nsc.Global$Run.compileFiles(Global.scala:1599)
	at xsbt.CachedCompiler0.run(CompilerBridge.scala:163)
	at xsbt.CachedCompiler0.run(CompilerBridge.scala:134)
	at xsbt.CompilerBridge.run(CompilerBridge.scala:39)
	at sbt.internal.inc.AnalyzingCompiler.compile(AnalyzingCompiler.scala:91)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$7(MixedAnalyzingCompiler.scala:186)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
	at sbt.internal.inc.MixedAnalyzingCompiler.timed(MixedAnalyzingCompiler.scala:241)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$4(MixedAnalyzingCompiler.scala:176)
	at sbt.internal.inc.MixedAnalyzingCompiler.$anonfun$compile$4$adapted(MixedAnalyzingCompiler.scala:157)
	at sbt.internal.inc.JarUtils$.withPreviousJar(JarUtils.scala:239)
	at sbt.internal.inc.MixedAnalyzingCompiler.compileScala$1(MixedAnalyzingCompiler.scala:157)
	at sbt.internal.inc.MixedAnalyzingCompiler.compile(MixedAnalyzingCompiler.scala:204)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileInternal$1$adapted(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.Incremental$.$anonfun$apply$5(Incremental.scala:174)
	at sbt.internal.inc.Incremental$.$anonfun$apply$5$adapted(Incremental.scala:172)
	at sbt.internal.inc.Incremental$$anon$2.run(Incremental.scala:457)
	at sbt.internal.inc.IncrementalCommon$CycleState.next(IncrementalCommon.scala:116)
	at sbt.internal.inc.IncrementalCommon$$anon$1.next(IncrementalCommon.scala:56)
	at sbt.internal.inc.IncrementalCommon$$anon$1.next(IncrementalCommon.scala:52)
	at sbt.internal.inc.IncrementalCommon.cycle(IncrementalCommon.scala:261)
	at sbt.internal.inc.Incremental$.$anonfun$incrementalCompile$8(Incremental.scala:412)
	at sbt.internal.inc.Incremental$.withClassfileManager(Incremental.scala:499)
	at sbt.internal.inc.Incremental$.incrementalCompile(Incremental.scala:399)
	at sbt.internal.inc.Incremental$.apply(Incremental.scala:166)
	at sbt.internal.inc.IncrementalCompilerImpl.compileInternal(IncrementalCompilerImpl.scala:528)
	at sbt.internal.inc.IncrementalCompilerImpl.$anonfun$compileIncrementally$1(IncrementalCompilerImpl.scala:482)
	at sbt.internal.inc.IncrementalCompilerImpl.handleCompilationError(IncrementalCompilerImpl.scala:332)
	at sbt.internal.inc.IncrementalCompilerImpl.compileIncrementally(IncrementalCompilerImpl.scala:420)
	at sbt.internal.inc.IncrementalCompilerImpl.compile(IncrementalCompilerImpl.scala:137)
	at mill.scalalib.worker.ZincWorkerImpl.compileInternal(ZincWorkerImpl.scala:512)
	at mill.scalalib.worker.ZincWorkerImpl.$anonfun$compileMixed0$1(ZincWorkerImpl.scala:311)
	at mill.api.FixSizedCache.withCachedValue(FixSizedCache.scala:62)
	at mill.scalalib.worker.ZincWorkerImpl.withCompilers(ZincWorkerImpl.scala:397)
	at mill.scalalib.worker.ZincWorkerImpl.compileMixed0(ZincWorkerImpl.scala:310)
	at mill.scalalib.worker.ZincWorkerImpl.compileMixed(ZincWorkerImpl.scala:280)
	at mill.scalalib.ScalaModule.$anonfun$compile$2(ScalaModule.scala:174)
	at mill.define.ApplyerGenerated.$anonfun$zipMap$9(ApplicativeGenerated.scala:21)
	at mill.define.Task$MappedDest.evaluate(Task.scala:396)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$13(Evaluator.scala:496)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withErr(Console.scala:193)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$12(Evaluator.scala:496)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withOut(Console.scala:164)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$11(Evaluator.scala:495)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at scala.Console$.withIn(Console.scala:227)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$8(Evaluator.scala:494)
	at mill.eval.Evaluator.$anonfun$evaluateGroup$8$adapted(Evaluator.scala:445)
	at scala.collection.immutable.Vector.foreach(Vector.scala:1856)
	at mill.eval.Evaluator.evaluateGroup(Evaluator.scala:445)
	at mill.eval.Evaluator.$anonfun$evaluateGroupCached$13(Evaluator.scala:342)
	at scala.util.DynamicVariable.withValue(DynamicVariable.scala:59)
	at mill.eval.Evaluator.evaluateGroupCached(Evaluator.scala:333)
	at mill.eval.Evaluator.$anonfun$sequentialEvaluate$2(Evaluator.scala:116)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1288)
	at mill.eval.Evaluator.sequentialEvaluate(Evaluator.scala:93)
	at mill.eval.Evaluator.evaluate(Evaluator.scala:79)
	at mill.main.RunScript$.evaluate(RunScript.scala:203)
	at mill.main.RunScript$.$anonfun$evaluateTasks$1(RunScript.scala:189)
	at scala.util.Either.map(Either.scala:382)
	at mill.main.RunScript$.evaluateTasks(RunScript.scala:188)
	at mill.main.RunScript$.$anonfun$runScript$4(RunScript.scala:67)
	at ammonite.util.Res$Success.flatMap(Res.scala:62)
	at mill.main.RunScript$.runScript(RunScript.scala:66)
	at mill.main.MainRunner.$anonfun$runScript$1(MainRunner.scala:119)
	at mill.main.MainRunner.watchLoop2(MainRunner.scala:68)
	at mill.main.MainRunner.runScript(MainRunner.scala:94)
	at mill.MillMain$.main0(MillMain.scala:299)
	at mill.MillMain$.main(MillMain.scala:104)
	at mill.MillMain.main(MillMain.scala)

[0m[[0m[33mwarn[0m] [0m[0m  io.out := io.in +% 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:32:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod0.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:32:20: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod0.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:33:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod1.io.in := mod0.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:33:25: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod1.io.in := mod0.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:34:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod2.io.in := mod1.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:34:25: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod2.io.in := mod1.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:35:11: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod3.io.in := mod2.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:35:25: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod3.io.in := mod2.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:36:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := mod3.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AnnotationNoDedup.scala:36:21: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := mod3.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoClonetypeSpec.scala:189:12: reflective access of structural type member value a should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      io.a.a := 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoClonetypeSpec.scala:212:12: reflective access of structural type member value a should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m        io.a := 0.U[0m
[0m[[0m[33mwarn[0m] [0m[0m           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoClonetypeSpec.scala:261:10: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      io.out := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoClonetypeSpec.scala:261:20: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m      io.out := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoNestedCloneSpec.scala:90:33: reflective access of structural type member value inner should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m        val w1 = WireDefault(io.inner)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoNestedCloneSpec.scala:132:97: reflective access of structural type member method mkBundle should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m          val bar = Output(Option(new { def mkBundle = new Bundle { val x = Vec(n, gen) }}).get.mkBundle)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                                                ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoNestedCloneSpec.scala:137:16: reflective access of structural type member value x should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m        io.bar.x := io.foo.x[0m
[0m[[0m[33mwarn[0m] [0m[0m               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/AutoNestedCloneSpec.scala:137:28: reflective access of structural type member value x should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m        io.bar.x := io.foo.x[0m
[0m[[0m[33mwarn[0m] [0m[0m                           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:55:18: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxPos.io.in := 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:56:18: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxNeg.io.in := 0.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:58:25: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxNeg.io.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:59:25: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxPos.io.out === 0.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:67:19: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxPos.foo.in := 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:68:19: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxNeg.foo.in := 0.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:70:26: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxNeg.foo.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:71:26: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxPos.foo.out === 0.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:78:15: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBox.io.in := 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:79:22: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBox.io.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:94:21: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxInvPos.io.in := 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:95:21: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxInvNeg.io.in := 0.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:96:22: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxPassPos.io.in := 1.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:97:22: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxPassNeg.io.in := 0.U[0m
[0m[[0m[33mwarn[0m] [0m[0m                     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:99:28: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxInvNeg.io.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:100:28: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxInvPos.io.out === 0.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:101:29: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxPassNeg.io.out === 0.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                            ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:102:29: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxPassPos.io.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                            ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:113:15: reflective access of structural type member value clock should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBox.io.clock := clock[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:114:15: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBox.io.in := impetus[0m
[0m[[0m[33mwarn[0m] [0m[0m              ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:118:24: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m    assert(blackBox.io.out === model)[0m
[0m[[0m[33mwarn[0m] [0m[0m                       ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:161:25: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxOne.io.out  === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                        ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:162:26: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxFour.io.out === 4.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                         ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:163:36: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxStringParamOne.io.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:164:36: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxStringParamTwo.io.out === 2.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                   ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:165:34: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxRealParamOne.io.out === 0x3ff0000000000000L.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:166:34: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxRealParamNeg.io.out === BigInt("bff0000000000000", 16).U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:167:34: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxTypeParamBit.io.out === 1.U)[0m
[0m[[0m[33mwarn[0m] [0m[0m                                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:168:35: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  assert(blackBoxTypeParamWord.io.out === "hdeadbeef".U(32.W))[0m
[0m[[0m[33mwarn[0m] [0m[0m                                  ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:208:62: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m        assert(DataMirror.modulePorts(m) == Seq("in" -> m.io.in, "out" -> m.io.out))[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                             ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBox.scala:208:80: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m        assert(DataMirror.modulePorts(m) == Seq("in" -> m.io.in, "out" -> m.io.out))[0m
[0m[[0m[33mwarn[0m] [0m[0m                                                                               ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:42:18: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxAdd.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m                 ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:42:27: reflective access of structural type member value in should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  blackBoxAdd.io.in := io.in[0m
[0m[[0m[33mwarn[0m] [0m[0m                          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:43:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := blackBoxAdd.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:43:28: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := blackBoxAdd.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m                           ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:73:11: reflective access of structural type member value in1 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod0.io.in1 := io.in1[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:73:21: reflective access of structural type member value in1 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod0.io.in1 := io.in1[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:74:11: reflective access of structural type member value in2 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod0.io.in2 := io.in2[0m
[0m[[0m[33mwarn[0m] [0m[0m          ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:74:21: reflective access of structural type member value in2 should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  mod0.io.in2 := io.in2[0m
[0m[[0m[33mwarn[0m] [0m[0m                    ^[0m
[0m[[0m[33mwarn[0m] [0m[0m/home/wangpeng/test/playground_test/dependencies/chisel3/src/test/scala/chiselTests/BlackBoxImpl.scala:75:6: reflective access of structural type member value out should be enabled[0m
[0m[[0m[33mwarn[0m] [0m[0mby making the implicit value scala.language.reflectiveCalls visible.[0m
[0m[[0m[33mwarn[0m] [0m[0m  io.out := mod0.io.out[0m
[0m[[0m[33mwarn[0m] [0m[0m     ^[0m
[0m[[0m[33mwarn[0m] [0m[0m100 warnings found[0m
[0m[[0m[0minfo[0m] [0m[0mdone compiling[0m
